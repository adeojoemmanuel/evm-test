/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { USDK, USDKInterface } from "../../contracts/USDK";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feePercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002228380380620022288339818101604052810190620000379190620006da565b336040518060400160405280600b81526020017f4b726564657465205553440000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5553444b000000000000000000000000000000000000000000000000000000008152508160039081620000b5919062000991565b508060049081620000c7919062000991565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000136919062000a89565b60405180910390fd5b6200015081620002a960201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ba9062000b2d565b60405180910390fd5b600081118015620001d45750606481105b62000216576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200020d9062000bc5565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600781905550620002a133620002736200036f60201b60201c565b60ff16600a62000284919062000d6a565b633b9aca0062000295919062000dbb565b6200037860201b60201c565b505062000eac565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003ed5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620003e4919062000a89565b60405180910390fd5b62000401600083836200040560201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200045b5780600260008282546200044e919062000e06565b9250508190555062000531565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620004ea578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004e19392919062000e52565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200057c5780600260008282540392505081905550620005c9565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000628919062000e8f565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000667826200063a565b9050919050565b62000679816200065a565b81146200068557600080fd5b50565b60008151905062000699816200066e565b92915050565b6000819050919050565b620006b4816200069f565b8114620006c057600080fd5b50565b600081519050620006d481620006a9565b92915050565b60008060408385031215620006f457620006f362000635565b5b6000620007048582860162000688565b92505060206200071785828601620006c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620007a357607f821691505b602082108103620007b957620007b86200075b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008237fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620007e4565b6200082f8683620007e4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620008726200086c62000866846200069f565b62000847565b6200069f565b9050919050565b6000819050919050565b6200088e8362000851565b620008a66200089d8262000879565b848454620007f1565b825550505050565b600090565b620008bd620008ae565b620008ca81848462000883565b505050565b5b81811015620008f257620008e6600082620008b3565b600181019050620008d0565b5050565b601f82111562000941576200090b81620007bf565b6200091684620007d4565b8101602085101562000926578190505b6200093e6200093585620007d4565b830182620008cf565b50505b505050565b600082821c905092915050565b6000620009666000198460080262000946565b1980831691505092915050565b600062000981838362000953565b9150826002028217905092915050565b6200099c8262000721565b67ffffffffffffffff811115620009b857620009b76200072c565b5b620009c482546200078a565b620009d1828285620008f6565b600060209050601f83116001811462000a095760008415620009f4578287015190505b62000a00858262000973565b86555062000a70565b601f19841662000a1986620007bf565b60005b8281101562000a435784890151825560018201915060208501945060208101905062000a1c565b8683101562000a63578489015162000a5f601f89168262000953565b8355505b6001600288020188555050505b505050505050565b62000a83816200065a565b82525050565b600060208201905062000aa0600083018462000a78565b92915050565b600082825260208201905092915050565b7f46656520616464726573732063616e6e6f74206265207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600062000b1560228362000aa6565b915062000b228262000ab7565b604082019050919050565b6000602082019050818103600083015262000b488162000b06565b9050919050565b7f4665652070657263656e74616765206d757374206265206265747765656e203160008201527f20616e6420393900000000000000000000000000000000000000000000000000602082015250565b600062000bad60278362000aa6565b915062000bba8262000b4f565b604082019050919050565b6000602082019050818103600083015262000be08162000b9e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000c755780860481111562000c4d5762000c4c62000be7565b5b600185161562000c5d5780820291505b808102905062000c6d8562000c16565b945062000c2d565b94509492505050565b60008262000c90576001905062000d63565b8162000ca0576000905062000d63565b816001811462000cb9576002811462000cc45762000cfa565b600191505062000d63565b60ff84111562000cd95762000cd862000be7565b5b8360020a91508482111562000cf35762000cf262000be7565b5b5062000d63565b5060208310610133831016604e8410600b841016171562000d345782820a90508381111562000d2e5762000d2d62000be7565b5b62000d63565b62000d43848484600162000c23565b9250905081840481111562000d5d5762000d5c62000be7565b5b81810290505b9392505050565b600062000d77826200069f565b915062000d84836200069f565b925062000db37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000c7e565b905092915050565b600062000dc8826200069f565b915062000dd5836200069f565b925082820262000de5816200069f565b9150828204841483151762000dff5762000dfe62000be7565b5b5092915050565b600062000e13826200069f565b915062000e20836200069f565b925082820190508082111562000e3b5762000e3a62000be7565b5b92915050565b62000e4c816200069f565b82525050565b600060608201905062000e69600083018662000a78565b62000e78602083018562000e41565b62000e87604083018462000e41565b949350505050565b600060208201905062000ea6600083018462000e41565b92915050565b61136c8062000ebc6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a001ecdd11610066578063a001ecdd1461023d578063a9059cbb1461025b578063dd62ed3e1461028b578063f2fde38b146102bb576100ea565b8063715018a6146101f75780638da5cb5b1461020157806395d89b411461021f576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806341275358146101a957806370a08231146101c7576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102d7565b6040516101049190610e58565b60405180910390f35b61012760048036038101906101229190610f13565b610369565b6040516101349190610f6e565b60405180910390f35b61014561038c565b6040516101529190610f98565b60405180910390f35b61017560048036038101906101709190610fb3565b610396565b6040516101829190610f6e565b60405180910390f35b6101936103c5565b6040516101a09190611022565b60405180910390f35b6101b16103ce565b6040516101be919061104c565b60405180910390f35b6101e160048036038101906101dc9190611067565b6103f4565b6040516101ee9190610f98565b60405180910390f35b6101ff61043c565b005b610209610450565b604051610216919061104c565b60405180910390f35b61022761047a565b6040516102349190610e58565b60405180910390f35b61024561050c565b6040516102529190610f98565b60405180910390f35b61027560048036038101906102709190610f13565b610512565b6040516102829190610f6e565b60405180910390f35b6102a560048036038101906102a09190611094565b6105d0565b6040516102b29190610f98565b60405180910390f35b6102d560048036038101906102d09190611067565b610657565b005b6060600380546102e690611103565b80601f016020809104026020016040519081016040528092919081815260200182805461031290611103565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050505050905090565b6000806103746106dd565b90506103818185856106e5565b600191505092915050565b6000600254905090565b6000806103a16106dd565b90506103ae8582856106f7565b6103b985858561078b565b60019150509392505050565b60006012905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61044461087f565b61044e6000610906565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461048990611103565b80601f01602080910402602001604051908101604052809291908181526020018280546104b590611103565b80156105025780601f106104d757610100808354040283529160200191610502565b820191906000526020600020905b8154815290600101906020018083116104e557829003601f168201915b5050505050905090565b60075481565b6000806064600754846105259190611163565b61052f91906111d4565b90506000818461053f9190611205565b90508361054b336103f4565b101561058c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610583906112ab565b60405180910390fd5b6105b933600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461078b565b6105c433868361078b565b60019250505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61065f61087f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106d15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106c8919061104c565b60405180910390fd5b6106da81610906565b50565b600033905090565b6106f283838360016109cc565b505050565b600061070384846105d0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107855781811015610775578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161076c939291906112cb565b60405180910390fd5b610784848484840360006109cc565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107fd5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107f4919061104c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361086f5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610866919061104c565b60405180910390fd5b61087a838383610ba3565b505050565b6108876106dd565b73ffffffffffffffffffffffffffffffffffffffff166108a5610450565b73ffffffffffffffffffffffffffffffffffffffff1614610904576108c86106dd565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108fb919061104c565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a3e5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a35919061104c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ab05760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610aa7919061104c565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b9d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b949190610f98565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf5578060026000828254610be99190611302565b92505081905550610cc8565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c81578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c78939291906112cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d115780600260008282540392505081905550610d5e565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dbb9190610f98565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e02578082015181840152602081019050610de7565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e2a82610dc8565b610e348185610dd3565b9350610e44818560208601610de4565b610e4d81610e0e565b840191505092915050565b60006020820190508181036000830152610e728184610e1f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eaa82610e7f565b9050919050565b610eba81610e9f565b8114610ec557600080fd5b50565b600081359050610ed781610eb1565b92915050565b6000819050919050565b610ef081610edd565b8114610efb57600080fd5b50565b600081359050610f0d81610ee7565b92915050565b60008060408385031215610f2a57610f29610e7a565b5b6000610f3885828601610ec8565b9250506020610f4985828601610efe565b9150509250929050565b60008115159050919050565b610f6881610f53565b82525050565b6000602082019050610f836000830184610f5f565b92915050565b610f9281610edd565b82525050565b6000602082019050610fad6000830184610f89565b92915050565b600080600060608486031215610fcc57610fcb610e7a565b5b6000610fda86828701610ec8565b9350506020610feb86828701610ec8565b9250506040610ffc86828701610efe565b9150509250925092565b600060ff82169050919050565b61101c81611006565b82525050565b60006020820190506110376000830184611013565b92915050565b61104681610e9f565b82525050565b6000602082019050611061600083018461103d565b92915050565b60006020828403121561107d5761107c610e7a565b5b600061108b84828501610ec8565b91505092915050565b600080604083850312156110ab576110aa610e7a565b5b60006110b985828601610ec8565b92505060206110ca85828601610ec8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061111b57607f821691505b60208210810361112e5761112d6110d4565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061116e82610edd565b915061117983610edd565b925082820261118781610edd565b9150828204841483151761119e5761119d611134565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006111df82610edd565b91506111ea83610edd565b9250826111fa576111f96111a5565b5b828204905092915050565b600061121082610edd565b915061121b83610edd565b925082820390508181111561123357611232611134565b5b92915050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611295602683610dd3565b91506112a082611239565b604082019050919050565b600060208201905081810360008301526112c481611288565b9050919050565b60006060820190506112e0600083018661103d565b6112ed6020830185610f89565b6112fa6040830184610f89565b949350505050565b600061130d82610edd565b915061131883610edd565b92508282019050808211156113305761132f611134565b5b9291505056fea26469706673582212202bc9ee515d93a88db1856237de9ba00d360a0f0b3fe752261e5604001b598eb564736f6c63430008180033";

type USDKConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDKConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDK__factory extends ContractFactory {
  constructor(...args: USDKConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeAddress: AddressLike,
    _feePercentage: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeAddress,
      _feePercentage,
      overrides || {}
    );
  }
  override deploy(
    _feeAddress: AddressLike,
    _feePercentage: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeAddress,
      _feePercentage,
      overrides || {}
    ) as Promise<
      USDK & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): USDK__factory {
    return super.connect(runner) as USDK__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDKInterface {
    return new Interface(_abi) as USDKInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): USDK {
    return new Contract(address, _abi, runner) as unknown as USDK;
  }
}
